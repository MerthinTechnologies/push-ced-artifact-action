import * as axios from 'axios'
import { config } from '../config/config';
import { AuthService } from './auth.service';

export class VersionService {

  public constructor(private _token?: string) {
  }

  public async getByName(name: string, projectId: string, environment: string, subsystemId: string): Promise<any> {
    const authService = new AuthService();
    const token = authService.getTokenOrThrow(this._token);
    const url = `${config.serverBaseUrl}/projects/${projectId}/environments/${environment}/subsystems/${subsystemId}/versions/get-by-name?name=${name}`;
    const response = await axios.default.get(url,{
      headers: {
        "cli-token": token,
      }
    });
    return response.data;
  }

  public async create(projectId: string, environment: string, subsystemId: string): Promise<any> {
    const authService = new AuthService();
    const token = authService.getTokenOrThrow(this._token);
    const url = `${config.serverBaseUrl}/projects/${projectId}/environments/${environment}/subsystems/${subsystemId}/versions/`;
    const response = await axios.default.post(url, {}, {
      headers: {
        "cli-token": token,
      }
    });
    return response.data;
  }

  public async publish(projectId: string, environment: string, subsystemId: string, versionId: string): Promise<void> {
    const authService = new AuthService();
    const token = authService.getTokenOrThrow(this._token);
    const url = `${config.serverBaseUrl}/projects/${projectId}/environments/${environment}/subsystems/${subsystemId}/versions/${versionId}/publish`;
    await axios.default.post(url, {}, {
      headers: {
        "cli-token": token,
      }
    });
  }
}