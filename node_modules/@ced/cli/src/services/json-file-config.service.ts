import * as fs from 'fs';
import * as os from 'os';
import * as path from 'path';
import { config } from '../config/config';

export class JsonFileConfigService {
  
  public exists(file: string): boolean {
    return fs.existsSync(file);
  }

  public saveJson<T>(file: string, obj: T): void {
    const json = JSON.stringify(obj, null, 2);

    const dir = path.dirname(file);
    if (!fs.existsSync(dir)){
      fs.mkdirSync(dir);
    }

    fs.writeFileSync(file, json);
  }

  public remove(file: string) {
    if (fs.existsSync(file)) {
      fs.unlinkSync(file);
    }
  }

  public readJson<T>(file: string): T | undefined {
    const dir = path.dirname(file);
    if (!fs.existsSync(dir)){
      fs.mkdirSync(dir);
    }

    if (!fs.existsSync(file)) {
      return undefined;
    }

    const data = fs.readFileSync(file);
    const json = data.toString();
    return JSON.parse(json);
  }

  public get globalConfigRootFolder() {
    const configFolder = config.environmentName === 'prod'
      ? '.ced'
      : '.ced-dev'
    return path.join(os.homedir(), configFolder);
  }
}
