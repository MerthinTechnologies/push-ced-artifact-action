import chalk = require("chalk");
import { VersionService } from "../services/version.service";
import { ProjectDirectoryConfigService } from "../services/project-directory-config.service";

export class CreateVersionCommandHandler {
  private _configService: ProjectDirectoryConfigService;
  private _versionService: VersionService;

  public constructor(token?: string) {
    this._configService = new ProjectDirectoryConfigService();
    this._versionService = new VersionService(token);
  }

  public async run(environment?: string, rawOutput?: boolean): Promise<string> {
    const context = this._configService.get();;
    return await this._createVersion(
      context.projectId, 
      environment || context.defaultEnvironment, 
      context.subsystemId, 
      rawOutput);
  }

  private async _createVersion(projectId: string, environment: string, subsystemId: string, rawOutput?: boolean) {
    const version = await this._versionService.create(projectId, environment, subsystemId);
    const message = rawOutput
      ? version.name
      : 'Version created: ' + chalk.cyan(version.name);
    console.log(message);
    
    if (!rawOutput) {
      console.log();
    }
    
    return version.name;
  }
}