"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SubsystemNotFoundError extends Error {
    constructor(projectId, environment, subsystemId) {
        super(`Subsystem id "${subsystemId}" not found in environment "${environment}" of project "${projectId}".`);
        Object.setPrototypeOf(this, new.target.prototype);
        this.name = SubsystemNotFoundError.name;
    }
}
exports.SubsystemNotFoundError = SubsystemNotFoundError;
//# sourceMappingURL=subsystem-not-found-error.js.map