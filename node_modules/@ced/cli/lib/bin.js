#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const program = require("commander");
const config_1 = require("./config/config");
const global_error_handler_service_1 = require("./services/global-error-handler.service");
const login_command_1 = require("./commands/login-command");
const logout_command_1 = require("./commands/logout.command");
const push_command_1 = require("./commands/push.command");
const create_version_command_1 = require("./commands/create-version.command");
const context_command_1 = require("./commands/context.command");
const init_command_1 = require("./commands/init.command");
const projects_command_1 = require("./commands/projects.command");
const session_command_1 = require("./commands/session.command");
const updater_service_1 = require("./services/updater.service");
global_error_handler_service_1.GlobalErrorHandler.init();
updater_service_1.UpdaterService.notifyAvailableUpdate();
program
    .version(config_1.config.version)
    .option('-t, --token <Token>', `Pre authenticated token.`)
    .description(`CloudEdgeDistribution command line interface`);
init_command_1.InitCommand.install();
login_command_1.LoginCommand.install();
logout_command_1.LogoutCommand.install();
session_command_1.SessionCommand.install();
context_command_1.ContextCommand.install();
create_version_command_1.CreateVersionCommand.install();
push_command_1.PushCommand.install();
projects_command_1.ProjectsCommand.install();
if (process.argv.length === 2) {
    program.outputHelp();
}
else {
    program.parse(process.argv);
}
//# sourceMappingURL=bin.js.map